#!/usr/bin/env bash
bold=$(tput bold)
normal=$(tput sgr0)
#hyperfine --export-markdown /etc/nixos/measure.md --runs 3 "nixos-rebuild dry-activate"


if [[ ! -f /etc/nixos/switch && ! -f ~/.nixpkgs/switch ]]; then
	echo "‚ò∫Ô∏è Hello, ${bold}$USER${normal}. Creating new generation for ${bold}$OSTYPE${normal}!"
	echo "üò® ${bold}Nix is not installed${normal}, running installer now‚Ä¶"
	mkdir -p setup/
	if [[ ! -f setup/linux_setup.sh && ! -f setup/macos_setup.sh ]]; then
		echo "üéæ Fetching install scripts from GitHub‚Ä¶"
		curl "https://raw.githubusercontent.com/Snuggle/NixOS/main/setup/linux_setup.sh" > setup/linux_setup.sh
		curl "https://raw.githubusercontent.com/Snuggle/NixOS/main/setup/macos_setup.sh" > setup/macos_setup.sh
	fi
	chmod +x setup/macos_setup.sh setup/linux_setup.sh
	case "$OSTYPE" in
		darwin*) setup/macos_setup.sh ;;
		linux*) setup/linux_setup.sh ;;
		*) echo "unknown: $OSTYPE" ;;
	esac
else
	echo "üòÄ Welcome back, ${bold}$USER${normal}. Creating new generation for ${bold}$OSTYPE${normal}!"
	echo "${bold}‚öóÔ∏è Testing Configuration ${normal}"
	case "$OSTYPE" in
		darwin*)  darwin-rebuild --dry-run build ;; 
		linux*)   nixos-rebuild dry-build ;;
	  *)        echo "unknown: $OSTYPE" ;;
	esac

	if [ $? -eq 0 ]; then
		echo "üî® Rebuilding Configuration‚Ä¶"
		case "$OSTYPE" in
			darwin*)  darwin-rebuild switch --max-jobs 4 ;; 
			linux*)   sudo nixos-rebuild switch --upgrade --max-jobs 16 ;;
		  *)        echo "unknown: $OSTYPE" ;;
		esac
		if [ $? -eq 0 ]; then
			echo "‚ùÑÔ∏è Done! NixOS is Now Running Generation $(sudo nix-env --list-generations --profile /nix/var/nix/profiles/system | grep current | awk '{print $1}')."
		fi
	else 
		echo "üö® Could Not Build Configuration‚Ä¶"
	fi
fi
